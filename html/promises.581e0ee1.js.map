{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAe,SAKvC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAbaJ,SAASC,cAAc,mBAE/BW,iBAAkB,SAgB9B,SAAwBC,GACtBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOjB,EAAOK,MAAMa,OAC5BC,EAAOF,OAAOjB,EAAOmB,KAAKD,OAC1BE,EAASH,OAAOjB,EAAOoB,OAAOF,OAEzBG,EAAW,EAAGA,EAAWD,EAAQC,GAAY,EACpDlB,EAAckB,EAAW,EAAGL,EAAQG,EAAOE,GACxCC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBP,EAAA0B,OAAOC,QAAQ,qBAAoCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE1DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBP,EAAA0B,OAAOI,QAAQ,oBAAmCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector(`.form`);\nconst createBtnEl = document.querySelector(\"[type='submit']\");\n\ncreateBtnEl.addEventListener(`click`, displayPromise);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n};\n\nfunction displayPromise(event) {\n  event.preventDefault();\n\n  let delay = Number(formEl.delay.value);\n  let step = Number(formEl.step.value);\n  let amount = Number(formEl.amount.value);\n  \n  for (let position = 0; position < amount; position += 1) {\n    createPromise(position + 1, delay + step * position)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      })\n  };\n};"],"names":["$h6c0i","parcelRequire","$95b1f5eb58d53a61$var$formEl","document","querySelector","$95b1f5eb58d53a61$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"promises.581e0ee1.js.map"}